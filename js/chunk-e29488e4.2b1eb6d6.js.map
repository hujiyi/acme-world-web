{"version":3,"sources":["webpack:///./src/views/account/pages/SignUp.vue?4ba8","webpack:///./src/views/account/pages/SignUp.vue?d490","webpack:///src/views/account/pages/SignUp.vue","webpack:///./src/views/account/pages/SignUp.vue?52cd","webpack:///./src/views/account/pages/SignUp.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./src/api/service/account_service.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","model","value","callback","$$v","email","expression","username","password","on","createUser","staticRenderFns","localStorage","setItem","token","component","_typeof","obj","Symbol","iterator","constructor","prototype","AccountService","user","LC","User","setUsername","setPassword","set","setEmail","signUp","response","console","log","code","logIn","logOut","requestPasswordReset","current","getSessionToken"],"mappings":"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","file":"js/chunk-e29488e4.2b1eb6d6.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignUp.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-card',{staticClass:\"login-module\",attrs:{\"shadow\":\"always\"}},[_c('el-form',[_c('div',{staticClass:\"horiz-container form-title\"},[_c('span',[_vm._v(\"注册新用户\")]),_c('div',{staticClass:\"spacer\"}),_c('span',[_c('router-link',{attrs:{\"to\":\"/\"}},[_c('i',{staticClass:\"fa fa-home fa-lg\",attrs:{\"aria-hidden\":\"true\"}})])],1)]),_c('el-form-item',[_c('el-input',{attrs:{\"type\":\"text\",\"prefix-icon\":\"fa fa-envelope-o fa-lg\",\"placeholder\":\"电子邮箱\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1),_c('el-form-item',[_c('el-input',{attrs:{\"type\":\"text\",\"prefix-icon\":\"fa fa-user-o fa-lg\",\"placeholder\":\"用户名\"},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}})],1),_c('el-form-item',[_c('el-input',{attrs:{\"type\":\"password\",\"prefix-icon\":\"fa fa-lock fa-lg\",\"placeholder\":\"密码\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1),_c('el-form-item',[_c('el-button',{staticClass:\"full-width\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.createUser}},[_vm._v(\"注册新用户\")])],1),_c('div',{staticClass:\"horiz-container\"},[_c('div',{staticClass:\"spacer\"}),_c('router-link',{staticClass:\"link\",attrs:{\"to\":\"/login\"}},[_c('el-link',{attrs:{\"underline\":false,\"type\":\"success\"}},[_vm._v(\"使用已有账号登录\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-card shadow=\"always\" class=\"login-module\">\r\n        <el-form>\r\n            <!-- form-title 样式在父组件中定义 -->\r\n            <div class=\"horiz-container form-title\">\r\n                <!-- 修改窗口标题文字 -->\r\n                <span>注册新用户</span>\r\n                <div class=\"spacer\"></div>\r\n                <span>\r\n                    <router-link to=\"/\">\r\n                        <i class=\"fa fa-home fa-lg\" aria-hidden=\"true\"></i>\r\n                    </router-link>\r\n                </span>\r\n            </div>\r\n            <!-- 添加用于输入电子邮箱的表单项 -->\r\n            <el-form-item>\r\n                <el-input\r\n                    type=\"text\"\r\n                    prefix-icon=\"fa fa-envelope-o fa-lg\"\r\n                    v-model=\"email\"\r\n                    placeholder=\"电子邮箱\"\r\n                ></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n                <el-input\r\n                    type=\"text\"\r\n                    prefix-icon=\"fa fa-user-o fa-lg\"\r\n                    v-model=\"username\"\r\n                    placeholder=\"用户名\"\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input\r\n                    type=\"password\"\r\n                    prefix-icon=\"fa fa-lock fa-lg\"\r\n                    v-model=\"password\"\r\n                    placeholder=\"密码\"\r\n                ></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <!-- 按钮添加单击事件调用函数创建用户 -->\r\n                <el-button class=\"full-width\" type=\"primary\" @click=\"createUser\">注册新用户</el-button>\r\n            </el-form-item>\r\n            <div class=\"horiz-container\">\r\n                <div class=\"spacer\"></div>\r\n                <!-- 保留一个 router-link, 并修改提示文字, 跳转路径和颜色 -->\r\n                <router-link to=\"/login\" class=\"link\">\r\n                    <el-link :underline=\"false\" type=\"success\">使用已有账号登录</el-link>\r\n                </router-link>\r\n            </div>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n// 导入账号服务类\r\nimport AccountService from \"../../../api/service/account_service\";\r\nexport default {\r\n    name: \"SignUp\",     // 组件名称\r\n    data: () => ({\r\n        username: \"\",   // 用于输入用户名\r\n        password: \"\",   // 用于输入密码\r\n        email: \"\",      // 用于输入邮箱 \r\n    }),    \r\n    methods: {\r\n        // 调用 AccountService 中的异步方法时，函数前要加上 async \r\n        async createUser() {\r\n            // 注册函数返回值为 包含 状态码 和 用户 两个部分内容的对象\r\n            let response = await AccountService.signUp(this.username, this.password, this.email);\r\n            if (response.status_code == \"ok\") {\r\n                // 调用异步方法不能缺少 await，不然等不到正确结果\r\n                let token = await AccountService.getToken();\r\n                localStorage.setItem(\"token\", token);   // 保存当前用户的 session token\r\n                // 保存当前用户信息 到  vuex  状态中\r\n                this.$store.commit('SET_CURRENT_USER', response.user);\r\n                this.$router.push(\"/dashboard\");  // 跳转到后台管理）\r\n            }\r\n            else {\r\n                let errorMsg = {\r\n                    \"202\": \"此用户名已被注册\",\r\n                    \"203\": \"此电子邮箱已经被占用\",\r\n                    \"-1\": \"请求被终止，请检查网络连接状况\",\r\n                };\r\n                // 使用 Notification 通知 显示注册失败的提示信息\r\n                this.$notify.error({\r\n                    title: '注册失败',                           // 标题\r\n                    message: errorMsg[response.status_code],    // 取出对应的消息内容\r\n                    // offset: 100,                             // 偏移量，消息距屏幕边缘偏移一段距离\r\n                    showClose: false,                           // 不显示关闭按钮，只能等自动关闭\r\n                });\r\n            }\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.login-module {\r\n    width: 380px;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignUp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignUp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SignUp.vue?vue&type=template&id=60ca0374&\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js&\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SignUp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import LC from 'leancloud-storage';  // 导入 leancloud 数据存储模块\r\n\r\n/**\r\n * 账号管理的类\r\n */\r\nclass AccountService {\r\n\r\n    /**\r\n     * 注册新用户账号\r\n     * @param {*} username \r\n     * @param {*} password \r\n     * @param {*} email \r\n     * @returns 注册返回的状态码： 202: \"用户名已被注册\", 203: \"邮箱已被注册\", \"-1\": \"无法连接到服务器\"\r\n     * \r\n     */\r\n    async signUp(username, password, email = '') {\r\n        try {\r\n            let user = new LC.User();\r\n            user.setUsername(username);\r\n            user.setPassword(password);\r\n            // 添加一个 昵称 字段，默认为用户名\r\n            user.set('nickname', username);\r\n            if (email) {\r\n                user.setEmail(email);\r\n            }\r\n            let response = await user.signUp();\r\n            console.log('注册账号成功：', response);\r\n            return {\r\n                \"status_code\": \"ok\",   // 注册状态码\r\n                \"user\": response,    // 用户\r\n            };\r\n        } catch (e) {\r\n            console.log('注册账号失败：', e.code, e);\r\n            return {\r\n                // 注册返回的状态码： 202: \"用户名已被注册\", 203: \"邮箱已被注册\", \"-1\": \"无法连接到服务器\"\r\n                \"status_code\": e.code,   // 注册状态码\r\n                \"user\": null,    // 注册失败，返回用户为 null\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 用户登录 \r\n     * @param {*} username \r\n     * @param {*} password \r\n     * @returns  登录状态代码 和用户\r\n     *  200: 登录成功\r\n     *  210: 密码错误； \r\n     *  211：用户不存在, \r\n     *  219: 重试次数太多\r\n     *  -1 : 请求被终止，一般是网络有问题\r\n     */\r\n    async logIn(username, password) {\r\n        try {\r\n            let user = await LC.User.logIn(username, password);\r\n            if (user) {\r\n                console.log('登录成功:', user);\r\n                return {\r\n                    \"status_code\": \"ok\",   // 登录状态码\r\n                    \"user\": user,    // 用户\r\n                };\r\n            }\r\n        } catch (e) {\r\n            // e.code\r\n            // 210: 密码错误； \r\n            //  211：用户不存在, \r\n            //  -1 Error: Request has been terminated\r\n            console.log('登录失败：', e.code, e);\r\n            return {\r\n                \"status_code\": e.code,\r\n                \"user\": null,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 退出登录 \r\n     * @returns 无返回值\r\n     */\r\n    async logOut() {\r\n        return LC.User.logOut();\r\n    }\r\n\r\n    /**\r\n     * 通过电子邮件重置密码\r\n     * @param {*} email \r\n     * @returns 状态码：\r\n     * \"200\": 发送邮件成功；\r\n     * \"1\": \"请不要往同一个邮件地址发送太多邮件\",\r\n     * \"205\": \"此电子邮箱没有被注册使用\",\r\n     * \"-1\": \"请求被终止，请检查网络连接状况\"\r\n     */\r\n    async passwordResetByEmail(email) {\r\n        try {\r\n            let response = await LC.User.requestPasswordReset(email);\r\n            console.log(response.code, typeof response);\r\n            return { \"status_code\": \"ok\" };\r\n        } catch (e) {\r\n            console.log(\"发送邮件：\", e.code, e);\r\n            return {\r\n                \"status_code\": e.code,  // 发送邮件不成功，返回错误代码\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前用户的 session token\r\n     * @returns session token\r\n     */\r\n    async getToken() {\r\n        return LC.User.current().getSessionToken();\r\n    }\r\n\r\n}\r\n\r\nexport default new AccountService();"],"sourceRoot":""}