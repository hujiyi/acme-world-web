{"version":3,"sources":["webpack:///./src/views/home/pages/ToplicList.vue?b27c","webpack:///src/views/home/pages/ToplicList.vue","webpack:///./src/views/home/pages/ToplicList.vue?e1b3","webpack:///./src/views/home/pages/ToplicList.vue","webpack:///./src/views/home/pages/ToplicList.vue?2c7b"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","staticStyle","_v","_l","item","index","key","class","top","level","name","params","id","_s","title","views","reply","lastEditor","username","_f","lastRepliedAt","totalCount","pageSize","currentPage","on","getTopics","$event","staticRenderFns","component"],"mappings":"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","file":"js/chunk-7865a0b2.77b155b6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"center\",\"align\":\"middle\"}},[_c('el-col',{attrs:{\"lg\":18,\"md\":20,\"sm\":24}},[_c('div',{staticClass:\"shadow\"},[_c('el-row',{staticClass:\"topic-title\",attrs:{\"type\":\"flex\",\"align\":\"middle\"}},[_c('el-col',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"标题\")]),_c('el-col',{staticClass:\"hidden-md-and-down\",staticStyle:{\"width\":\"100px\"}},[_vm._v(\"查看\")]),_c('el-col',{staticClass:\"hidden-md-and-down\",staticStyle:{\"width\":\"100px\"}},[_vm._v(\"评论\")]),_c('el-col',{staticClass:\"hidden-sm-and-down\",staticStyle:{\"width\":\"290px\",\"text-align\":\"center\"}},[_vm._v(\"最后评论\")])],1),_vm._l((_vm.topics),function(item,index){return _c('div',{key:index,staticClass:\"topic-item\",attrs:{\"id\":\"topic\"}},[_c('el-row',{staticClass:\"spacer\",attrs:{\"type\":\"flex\",\"justify\":\"center\",\"align\":\"middle\"}},[_c('el-col',{class:{ top: item.level > 0 }},[(item.level > 0)?_c('span',[_vm._v(\"[置顶]\")]):_c('span',[_vm._v(\"[话题]\")]),_c('router-link',{attrs:{\"to\":{ name: 'Detail', params: { id: item.id } }}},[_vm._v(_vm._s(item.title))])],1),_c('el-col',{staticClass:\"hidden-md-and-down\",staticStyle:{\"width\":\"100px\"}},[_vm._v(_vm._s(item.views))]),_c('el-col',{staticClass:\"hidden-md-and-down\",staticStyle:{\"width\":\"100px\"}},[_vm._v(_vm._s(item.reply))]),_c('el-col',{staticClass:\"hidden-sm-and-down\",staticStyle:{\"width\":\"290px\"}},[_c('span',[_vm._v(_vm._s(item.lastEditor.username))]),_c('br'),_c('span',{staticStyle:{\"color\":\"#a0a0a0\",\"font-size\":\"14px\"}},[_vm._v(_vm._s(_vm._f(\"datetimeFormat\")(item.lastRepliedAt)))])])],1)],1)}),_c('div',{staticClass:\"horiz-container pagination\"},[_c('div',{staticClass:\"spacer\"}),_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.totalCount,\"page-sizes\":[5, 10, 20, 30],\"page-size\":_vm.pageSize,\"current-page\":_vm.currentPage},on:{\"size-change\":_vm.getTopics,\"current-change\":_vm.getTopics,\"update:pageSize\":function($event){_vm.pageSize=$event},\"update:page-size\":function($event){_vm.pageSize=$event},\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}})],1)],2)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\">\r\n            <el-col :lg=\"18\" :md=\"20\" :sm=\"24\">\r\n                <div class=\"shadow\">\r\n                    <el-row type=\"flex\" align=\"middle\" class=\"topic-title\">\r\n                        <el-col style=\"text-align:center\">标题</el-col>\r\n                        <el-col style=\"width:100px;\" class=\"hidden-md-and-down\">查看</el-col>\r\n                        <el-col style=\"width:100px;\" class=\"hidden-md-and-down\">评论</el-col>\r\n                        <el-col\r\n                            style=\"width:290px; text-align:center;\"\r\n                            class=\"hidden-sm-and-down\"\r\n                        >最后评论</el-col>\r\n                    </el-row>\r\n                    <div v-for=\"(item,index) in topics\" :key=\"index\" id=\"topic\" class=\"topic-item\">\r\n                        <el-row type=\"flex\" justify=\"center\" align=\"middle\" class=\"spacer\">\r\n                            <el-col :class=\"{ top: item.level > 0 }\">\r\n                                <span v-if=\"item.level > 0\">[置顶]</span>\r\n                                <span v-else>[话题]</span>\r\n                                <router-link\r\n                                    :to=\"{ name: 'Detail', params: { id: item.id } }\"\r\n                                >{{ item.title }}</router-link>\r\n                            </el-col>\r\n                            <el-col style=\"width:100px;\" class=\"hidden-md-and-down\">{{ item.views }}</el-col>\r\n                            <el-col style=\"width:100px;\" class=\"hidden-md-and-down\">{{ item.reply }}</el-col>\r\n                            <el-col style=\"width:290px;\" class=\"hidden-sm-and-down\">\r\n                                <span>{{ item.lastEditor.username }}</span>\r\n                                <br />\r\n                                <span\r\n                                    style=\"color:#a0a0a0;font-size:14px;\"\r\n                                >{{ item.lastRepliedAt | datetimeFormat }}</span>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                    <div class=\"horiz-container pagination\">\r\n                        <div class=\"spacer\"></div>\r\n                        <el-pagination\r\n                            background\r\n                            @size-change=\"getTopics\"\r\n                            @current-change=\"getTopics\"\r\n                            layout=\"total, sizes, prev, pager, next, jumper\"\r\n                            :total=\"totalCount\"\r\n                            :page-sizes=\"[5, 10, 20, 30]\"\r\n                            :page-size.sync=\"pageSize\"\r\n                            :current-page.sync=\"currentPage\"\r\n                        ></el-pagination>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TopicService from '../../../api/service/topic_service';\r\nimport moment from 'moment';\r\nexport default {\r\n    name: 'TopicList',\r\n    data: () => ({\r\n        topics: [],          // 从服务器取回的一页数据 \r\n        pageSize: 10,        // 每页大小\r\n        currentPage: 1,      // 当前页\r\n        totalCount: 0,       // 总记录数量\r\n    }),\r\n    mounted() {\r\n        this.getTopics();    // 获取论坛话题\r\n    },\r\n    methods: {\r\n        async getTopics() {\r\n            this.loading = true;\r\n            this.topics = [];  // 清空数据\r\n            let skip = (this.currentPage - 1) * this.pageSize;\r\n            // 查询当前页的数据，\r\n            let response = await TopicService.fetchAll(this.pageSize, skip, [\"createdBy\", \"lastEditor\"], ['-level', '-lastRepliedAt']);\r\n            if (response.status_code === 'ok') {\r\n                console.log(response);\r\n                this.totalCount = response.totalCount;   // 总记录数\r\n                // 返回当前页所有数据的结果 \r\n                this.topics = response.reslut.map(item => { return this.formJson(item) });\r\n            }\r\n            this.loading = false;\r\n        },\r\n\r\n        // 获取用户中各个字段的值， 可以根据需要添加\r\n        getUser(user) {\r\n            // console.log(user);\r\n            return {\r\n                id: user.id,\r\n                username: user.get(\"username\"),\r\n                email: user.get(\"email\"),\r\n            }\r\n        },\r\n\r\n        // 将从服务器端取到的数据不能直接使用，转为对象格式的数据\r\n        formJson(item) {\r\n            return {\r\n                id: item.id,   // leancloud Class 自带属性，对应 leanclud Class 中的 \"ObjectId\", 可以用\".id\"直接引用\r\n                title: item.get('title'),\r\n                content: item.get('content'),\r\n                views: item.get('views'),\r\n                reply: item.get('reply'),\r\n                level: item.get('level'),\r\n                lastRepliedAt: item.get('lastRepliedAt'),\r\n                createdAt: item.createdAt,  // leancloud Class 自带属性,创建时间,不能修改值\r\n                updatedAt: item.updatedAt,   // leancloud Class 自带属性,最后修改时间,只能leancloud 自动修改\r\n\r\n                /**\r\n                 * createdBy、lastEditor 指向另一个表的字段, 默认只能得到该字段在关联表中的id 值\r\n                 * 要得到完整值， 查询时字段名要包含在 include 中，\r\n                 * 取值时，要先判断是否为空，如果为空，取值会抛出异常，\r\n                 */\r\n                createdBy: item.get(\"createdBy\")\r\n                    ? this.getUser(item.get(\"createdBy\"))\r\n                    : \"\",\r\n                lastEditor: item.get(\"lastEditor\")\r\n                    ? this.getUser(item.get(\"lastEditor\"))\r\n                    : \"\",\r\n            }\r\n        },\r\n\r\n        /**\r\n       * 自定义用于局部区域显示 loading 的函数\r\n       * @param {*} targetNode  目标区域的选择器，建设使用 id 选择器\r\n       * @returns \r\n       */\r\n        showLoading(targetNode, message) {\r\n            this.loading = Loading.service({\r\n                // 锁定屏幕的滚动\r\n                lock: true,\r\n                // 显示的文本\r\n                text: message,\r\n                // document.querySelector 用于以获取到对应 DOM 节点\r\n                target: document.querySelector(targetNode),\r\n            });\r\n        },\r\n\r\n        // 停止显示 loading\r\n        endLoading() {\r\n            this.loading.close();\r\n        }\r\n\r\n    },\r\n\r\n    // 过滤器\r\n    filters: {\r\n        // 使用 moment.js 定义日期时间过滤器函数   \r\n        datetimeFormat(val) {\r\n            let now = new Date();\r\n            //  计算两个时间相差的天数\r\n            let days = moment(now).diff(moment(val), 'days');\r\n            if (days <= 3) {\r\n                // 小于三天的返回格式：1小时前\r\n                return moment(val).fromNow();\r\n            }\r\n            // 三天以上的返回日期时间\r\n            return moment(val).format(\"lll\");\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 标题行的样式 */\r\n.topic-title {\r\n    background-color: #f1f4f8;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-top: 2px solid #1985db;\r\n    border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n/* 置顶话题的样式 */\r\n.top {\r\n    font-weight: bold;\r\n}\r\n\r\n/* 置顶话题超链接的样式 */\r\n.top a {\r\n    color: #2897c5 !important ;\r\n}\r\n\r\n.topic-item {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 50px;\r\n    padding: 5px;\r\n    background: #ffffff;\r\n    border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n/* 隔行显示不同的背景颜色 */\r\n.topic-item:nth-child(odd) {\r\n    background: #f1f4f8;\r\n}\r\n\r\n.topic-item a {\r\n    text-decoration: none;\r\n    color: #333333;\r\n    padding-left: 8px;\r\n}\r\n\r\n/* 鼠标指向的行背景色 */\r\n.topic-item:hover {\r\n    background: #b0d0fd;\r\n}\r\n\r\n.pagination {\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n}\r\n\r\n/* 阴影 */\r\n.shadow {\r\n    box-shadow: 0 2px 12px 2px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n    border: 1px solid #ebeef5;\r\n    background-color: #fff;\r\n    color: #303133;\r\n    transition: 0.3s;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToplicList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToplicList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ToplicList.vue?vue&type=template&id=06803d8a&\"\nimport script from \"./ToplicList.vue?vue&type=script&lang=js&\"\nexport * from \"./ToplicList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ToplicList.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToplicList.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}